// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository;

#nullable disable

namespace TandemTechAPI.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20240404185954_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PlanPhoneNumberId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlanPhoneNumberId");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("Entities.PhoneNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("PhoneNumbers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Number = "2125551234"
                        },
                        new
                        {
                            Id = 2,
                            Number = "2125551235"
                        },
                        new
                        {
                            Id = 3,
                            Number = "2125551236"
                        },
                        new
                        {
                            Id = 4,
                            Number = "2125551237"
                        },
                        new
                        {
                            Id = 5,
                            Number = "4155551234"
                        },
                        new
                        {
                            Id = 6,
                            Number = "4155551235"
                        },
                        new
                        {
                            Id = 7,
                            Number = "4155551236"
                        },
                        new
                        {
                            Id = 8,
                            Number = "4155551237"
                        },
                        new
                        {
                            Id = 9,
                            Number = "3125551234"
                        },
                        new
                        {
                            Id = 10,
                            Number = "3125551235"
                        },
                        new
                        {
                            Id = 11,
                            Number = "3125551236"
                        },
                        new
                        {
                            Id = 12,
                            Number = "3125551237"
                        },
                        new
                        {
                            Id = 13,
                            Number = "2135551234"
                        },
                        new
                        {
                            Id = 14,
                            Number = "2135551235"
                        },
                        new
                        {
                            Id = 15,
                            Number = "2135551236"
                        },
                        new
                        {
                            Id = 16,
                            Number = "2135551237"
                        },
                        new
                        {
                            Id = 17,
                            Number = "2125551238"
                        },
                        new
                        {
                            Id = 18,
                            Number = "2125551239"
                        },
                        new
                        {
                            Id = 19,
                            Number = "2125551240"
                        },
                        new
                        {
                            Id = 20,
                            Number = "2125551241"
                        });
                });

            modelBuilder.Entity("Entities.PhonePlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DataLimit")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("DeviceLimit")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("PhonePlans");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataLimit = 5,
                            Description = "Stay connected with our Basic Plan, perfect for calls, messages, and browsing with a generous 5GB data limit.",
                            DeviceLimit = 1,
                            Name = "Basic Plan",
                            Price = 30m
                        },
                        new
                        {
                            Id = 2,
                            DataLimit = 10,
                            Description = "Upgrade to our Standard Plan for more data and the flexibility to connect two devices. Enjoy browsing, streaming, and sharing with 10GB of data.",
                            DeviceLimit = 2,
                            Name = "Standard Plan",
                            Price = 40m
                        },
                        new
                        {
                            Id = 3,
                            DataLimit = 0,
                            Description = "Get the ultimate experience with our Premium Plan. Stream, game, and connect with multiple devices effortlessly with unlimited data.",
                            DeviceLimit = 5,
                            Name = "Premium Plan",
                            Price = 60m
                        });
                });

            modelBuilder.Entity("Entities.PlanPhoneNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PhoneNumberId")
                        .HasColumnType("int");

                    b.Property<int>("UserPlanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PhoneNumberId");

                    b.HasIndex("UserPlanId");

                    b.ToTable("PlanPhoneNumbers");
                });

            modelBuilder.Entity("Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "calexander@contosouniversity.edu",
                            FirstName = "Carson",
                            LastName = "Alexander"
                        },
                        new
                        {
                            Id = 2,
                            Email = "malonso@contosouniversity.edu",
                            FirstName = "Meredith",
                            LastName = "Alonso"
                        },
                        new
                        {
                            Id = 3,
                            Email = "aanand@contosouniversity.edu",
                            FirstName = "Arturo",
                            LastName = "Anand"
                        },
                        new
                        {
                            Id = 4,
                            Email = "gbarzdukas@contosouniversity.edu",
                            FirstName = "Gytis",
                            LastName = "Barzdukas"
                        },
                        new
                        {
                            Id = 5,
                            Email = "yli@contosouniversity.edu",
                            FirstName = "Yan",
                            LastName = "Li"
                        },
                        new
                        {
                            Id = 6,
                            Email = "pjustice@contosouniversity.edu",
                            FirstName = "Bob",
                            LastName = "Justice"
                        },
                        new
                        {
                            Id = 7,
                            Email = "lnorman@contosouniversity.edu",
                            FirstName = "Laura",
                            LastName = "Norman"
                        },
                        new
                        {
                            Id = 8,
                            Email = "nolivetto@contosouniversity.edu",
                            FirstName = "Nino",
                            LastName = "Olivetto"
                        });
                });

            modelBuilder.Entity("Entities.UserPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PhonePlanId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PhonePlanId");

                    b.HasIndex("UserId");

                    b.ToTable("UserPlans");
                });

            modelBuilder.Entity("Entities.Device", b =>
                {
                    b.HasOne("Entities.PlanPhoneNumber", "PlanPhoneNumber")
                        .WithMany()
                        .HasForeignKey("PlanPhoneNumberId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PlanPhoneNumber");
                });

            modelBuilder.Entity("Entities.PlanPhoneNumber", b =>
                {
                    b.HasOne("Entities.PhoneNumber", "PhoneNumber")
                        .WithMany()
                        .HasForeignKey("PhoneNumberId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Entities.UserPlan", "UserPlan")
                        .WithMany()
                        .HasForeignKey("UserPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PhoneNumber");

                    b.Navigation("UserPlan");
                });

            modelBuilder.Entity("Entities.UserPlan", b =>
                {
                    b.HasOne("Entities.PhonePlan", "PhonePlan")
                        .WithMany()
                        .HasForeignKey("PhonePlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.User", "User")
                        .WithMany("UserPlans")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PhonePlan");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entities.User", b =>
                {
                    b.Navigation("UserPlans");
                });
#pragma warning restore 612, 618
        }
    }
}
