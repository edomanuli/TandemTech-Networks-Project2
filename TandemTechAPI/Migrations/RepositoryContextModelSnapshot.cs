// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository;

#nullable disable

namespace TandemTechAPI.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    partial class RepositoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.AssignedNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PhoneNumberId")
                        .HasColumnType("int");

                    b.Property<int>("UserPlanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PhoneNumberId")
                        .IsUnique();

                    b.HasIndex("UserPlanId");

                    b.ToTable("AssignedNumbers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PhoneNumberId = 1,
                            UserPlanId = 1
                        },
                        new
                        {
                            Id = 2,
                            PhoneNumberId = 6,
                            UserPlanId = 3
                        },
                        new
                        {
                            Id = 3,
                            PhoneNumberId = 7,
                            UserPlanId = 3
                        },
                        new
                        {
                            Id = 4,
                            PhoneNumberId = 8,
                            UserPlanId = 3
                        },
                        new
                        {
                            Id = 5,
                            PhoneNumberId = 9,
                            UserPlanId = 3
                        },
                        new
                        {
                            Id = 6,
                            PhoneNumberId = 10,
                            UserPlanId = 3
                        },
                        new
                        {
                            Id = 7,
                            PhoneNumberId = 11,
                            UserPlanId = 4
                        },
                        new
                        {
                            Id = 8,
                            PhoneNumberId = 12,
                            UserPlanId = 5
                        },
                        new
                        {
                            Id = 9,
                            PhoneNumberId = 13,
                            UserPlanId = 5
                        },
                        new
                        {
                            Id = 10,
                            PhoneNumberId = 14,
                            UserPlanId = 6
                        },
                        new
                        {
                            Id = 11,
                            PhoneNumberId = 15,
                            UserPlanId = 6
                        },
                        new
                        {
                            Id = 12,
                            PhoneNumberId = 16,
                            UserPlanId = 7
                        },
                        new
                        {
                            Id = 13,
                            PhoneNumberId = 17,
                            UserPlanId = 7
                        },
                        new
                        {
                            Id = 14,
                            PhoneNumberId = 18,
                            UserPlanId = 8
                        },
                        new
                        {
                            Id = 15,
                            PhoneNumberId = 19,
                            UserPlanId = 9
                        },
                        new
                        {
                            Id = 16,
                            PhoneNumberId = 20,
                            UserPlanId = 9
                        },
                        new
                        {
                            Id = 18,
                            PhoneNumberId = 22,
                            UserPlanId = 11
                        },
                        new
                        {
                            Id = 19,
                            PhoneNumberId = 23,
                            UserPlanId = 11
                        },
                        new
                        {
                            Id = 20,
                            PhoneNumberId = 24,
                            UserPlanId = 12
                        },
                        new
                        {
                            Id = 21,
                            PhoneNumberId = 25,
                            UserPlanId = 13
                        },
                        new
                        {
                            Id = 22,
                            PhoneNumberId = 2,
                            UserPlanId = 14
                        },
                        new
                        {
                            Id = 23,
                            PhoneNumberId = 3,
                            UserPlanId = 16
                        },
                        new
                        {
                            Id = 24,
                            PhoneNumberId = 4,
                            UserPlanId = 17
                        },
                        new
                        {
                            Id = 25,
                            PhoneNumberId = 5,
                            UserPlanId = 17
                        },
                        new
                        {
                            Id = 26,
                            PhoneNumberId = 21,
                            UserPlanId = 18
                        });
                });

            modelBuilder.Entity("Entities.Device", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("AssignedNumberId")
                        .HasColumnType("int");

                    b.Property<int>("DeviceInfoId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Serial")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AssignedNumberId")
                        .IsUnique();

                    b.ToTable("Devices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AssignedNumberId = 1,
                            DeviceInfoId = 3,
                            Name = "My iPhone 13 Mini",
                            Serial = "EM12345"
                        },
                        new
                        {
                            Id = 2,
                            AssignedNumberId = 2,
                            DeviceInfoId = 9,
                            Name = "Jake's Galaxy Z Fold 3",
                            Serial = "LM54321"
                        },
                        new
                        {
                            Id = 3,
                            AssignedNumberId = 3,
                            DeviceInfoId = 15,
                            Name = "Dad's Pixel 3a",
                            Serial = "LM98765"
                        },
                        new
                        {
                            Id = 4,
                            AssignedNumberId = 4,
                            DeviceInfoId = 22,
                            Name = "Mom's Xiaomi Redmi Note 11",
                            Serial = "LM13579"
                        },
                        new
                        {
                            Id = 5,
                            AssignedNumberId = 5,
                            DeviceInfoId = 6,
                            Name = "My Samsung Galaxy S21",
                            Serial = "LM24680"
                        },
                        new
                        {
                            Id = 6,
                            AssignedNumberId = 6,
                            DeviceInfoId = 2,
                            Name = "Sara's iPhone 13 Pro",
                            Serial = "LM11223"
                        },
                        new
                        {
                            Id = 7,
                            AssignedNumberId = 7,
                            DeviceInfoId = 14,
                            Name = "Brother's Pixel 4 XL",
                            Serial = "OV44444"
                        },
                        new
                        {
                            Id = 8,
                            AssignedNumberId = 8,
                            DeviceInfoId = 18,
                            Name = "Sister's OnePlus Nord 2",
                            Serial = "OV55555"
                        },
                        new
                        {
                            Id = 9,
                            AssignedNumberId = 9,
                            DeviceInfoId = 12,
                            Name = "Grandpa's Pixel 5a",
                            Serial = "OV66666"
                        },
                        new
                        {
                            Id = 10,
                            AssignedNumberId = 10,
                            DeviceInfoId = 20,
                            Name = "Grandma's OnePlus 8 Pro",
                            Serial = "OV77777"
                        },
                        new
                        {
                            Id = 11,
                            AssignedNumberId = 11,
                            DeviceInfoId = 7,
                            Name = "Uncle's Galaxy Note 20",
                            Serial = "OV88888"
                        },
                        new
                        {
                            Id = 12,
                            AssignedNumberId = 12,
                            DeviceInfoId = 4,
                            Name = "Aunt's iPhone SE",
                            Serial = "NH12121"
                        },
                        new
                        {
                            Id = 13,
                            AssignedNumberId = 13,
                            DeviceInfoId = 10,
                            Name = "Cousin's Galaxy S20 FE",
                            Serial = "NH23232"
                        },
                        new
                        {
                            Id = 14,
                            AssignedNumberId = 14,
                            DeviceInfoId = 17,
                            Name = "My OnePlus 9",
                            Serial = "AV99999"
                        },
                        new
                        {
                            Id = 15,
                            AssignedNumberId = 15,
                            DeviceInfoId = 25,
                            Name = "Xiaomi Mi Mix 4",
                            Serial = "AV88888"
                        },
                        new
                        {
                            Id = 16,
                            AssignedNumberId = 16,
                            DeviceInfoId = 13,
                            Name = "Pixel 4a 5G",
                            Serial = "AV77777"
                        },
                        new
                        {
                            Id = 18,
                            AssignedNumberId = 18,
                            DeviceInfoId = 23,
                            Name = "Xiaomi Mi 11 Lite",
                            Serial = "OL54321"
                        },
                        new
                        {
                            Id = 19,
                            AssignedNumberId = 19,
                            DeviceInfoId = 11,
                            Name = "Google Pixel 6",
                            Serial = "OL98765"
                        },
                        new
                        {
                            Id = 20,
                            AssignedNumberId = 21,
                            DeviceInfoId = 19,
                            Name = "OnePlus 8T",
                            Serial = "IS24680"
                        },
                        new
                        {
                            Id = 21,
                            AssignedNumberId = 22,
                            DeviceInfoId = 8,
                            Name = "Samsung Galaxy A52",
                            Serial = "ET56789"
                        },
                        new
                        {
                            Id = 22,
                            AssignedNumberId = 23,
                            DeviceInfoId = 16,
                            Name = "OnePlus 9 Pro",
                            Serial = "SP98765"
                        },
                        new
                        {
                            Id = 23,
                            AssignedNumberId = 24,
                            DeviceInfoId = 1,
                            Name = "iPhone 13",
                            Serial = "SP54321"
                        },
                        new
                        {
                            Id = 24,
                            AssignedNumberId = 26,
                            DeviceInfoId = 8,
                            Name = "Jacob's Phone",
                            Serial = "JC13579"
                        });
                });

            modelBuilder.Entity("Entities.DeviceInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImgUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("DeviceInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Manufacturer = "Apple",
                            Model = "iPhone 13"
                        },
                        new
                        {
                            Id = 2,
                            Manufacturer = "Apple",
                            Model = "iPhone 13 Pro"
                        },
                        new
                        {
                            Id = 3,
                            Manufacturer = "Apple",
                            Model = "iPhone 13 Mini"
                        },
                        new
                        {
                            Id = 4,
                            Manufacturer = "Apple",
                            Model = "iPhone SE"
                        },
                        new
                        {
                            Id = 5,
                            Manufacturer = "Apple",
                            Model = "iPhone 12"
                        },
                        new
                        {
                            Id = 6,
                            Manufacturer = "Samsung",
                            Model = "Galaxy S21"
                        },
                        new
                        {
                            Id = 7,
                            Manufacturer = "Samsung",
                            Model = "Galaxy Note 20"
                        },
                        new
                        {
                            Id = 8,
                            Manufacturer = "Samsung",
                            Model = "Galaxy A52"
                        },
                        new
                        {
                            Id = 9,
                            Manufacturer = "Samsung",
                            Model = "Galaxy Z Fold 3"
                        },
                        new
                        {
                            Id = 10,
                            Manufacturer = "Samsung",
                            Model = "Galaxy S20 FE"
                        },
                        new
                        {
                            Id = 11,
                            Manufacturer = "Google",
                            Model = "Pixel 6"
                        },
                        new
                        {
                            Id = 12,
                            Manufacturer = "Google",
                            Model = "Pixel 5a"
                        },
                        new
                        {
                            Id = 13,
                            Manufacturer = "Google",
                            Model = "Pixel 4a 5G"
                        },
                        new
                        {
                            Id = 14,
                            Manufacturer = "Google",
                            Model = "Pixel 4 XL"
                        },
                        new
                        {
                            Id = 15,
                            Manufacturer = "Google",
                            Model = "Pixel 3a"
                        },
                        new
                        {
                            Id = 16,
                            Manufacturer = "OnePlus",
                            Model = "OnePlus 9 Pro"
                        },
                        new
                        {
                            Id = 17,
                            Manufacturer = "OnePlus",
                            Model = "OnePlus 9"
                        },
                        new
                        {
                            Id = 18,
                            Manufacturer = "OnePlus",
                            Model = "OnePlus Nord 2"
                        },
                        new
                        {
                            Id = 19,
                            Manufacturer = "OnePlus",
                            Model = "OnePlus 8T"
                        },
                        new
                        {
                            Id = 20,
                            Manufacturer = "OnePlus",
                            Model = "OnePlus 8 Pro"
                        },
                        new
                        {
                            Id = 21,
                            Manufacturer = "Xiaomi",
                            Model = "Xiaomi 11T Pro"
                        },
                        new
                        {
                            Id = 22,
                            Manufacturer = "Xiaomi",
                            Model = "Xiaomi Redmi Note 11"
                        },
                        new
                        {
                            Id = 23,
                            Manufacturer = "Xiaomi",
                            Model = "Xiaomi Mi 11 Lite"
                        },
                        new
                        {
                            Id = 24,
                            Manufacturer = "Xiaomi",
                            Model = "Xiaomi Poco X4 Pro"
                        },
                        new
                        {
                            Id = 25,
                            Manufacturer = "Xiaomi",
                            Model = "Xiaomi Mi Mix 4"
                        });
                });

            modelBuilder.Entity("Entities.MonthlyBill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BillingDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<decimal>("Total")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("MonthlyBills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BillingDate = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsPaid = true,
                            Total = 30m,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            BillingDate = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsPaid = false,
                            Total = 60m,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            BillingDate = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsPaid = true,
                            Total = 120m,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            BillingDate = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsPaid = false,
                            Total = 40m,
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            BillingDate = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsPaid = true,
                            Total = 70m,
                            UserId = 5
                        },
                        new
                        {
                            Id = 6,
                            BillingDate = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsPaid = false,
                            Total = 110m,
                            UserId = 6
                        },
                        new
                        {
                            Id = 7,
                            BillingDate = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsPaid = true,
                            Total = 60m,
                            UserId = 7
                        },
                        new
                        {
                            Id = 8,
                            BillingDate = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsPaid = true,
                            Total = 30m,
                            UserId = 8
                        },
                        new
                        {
                            Id = 9,
                            BillingDate = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsPaid = false,
                            Total = 100m,
                            UserId = 9
                        },
                        new
                        {
                            Id = 10,
                            BillingDate = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsPaid = true,
                            Total = 60m,
                            UserId = 10
                        });
                });

            modelBuilder.Entity("Entities.PhoneNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsPorted")
                        .HasColumnType("bit");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("PhoneNumbers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsPorted = false,
                            Number = "6035550100"
                        },
                        new
                        {
                            Id = 2,
                            IsPorted = false,
                            Number = "6035550101"
                        },
                        new
                        {
                            Id = 3,
                            IsPorted = false,
                            Number = "6035550102"
                        },
                        new
                        {
                            Id = 4,
                            IsPorted = false,
                            Number = "6035550103"
                        },
                        new
                        {
                            Id = 5,
                            IsPorted = false,
                            Number = "6035550104"
                        },
                        new
                        {
                            Id = 6,
                            IsPorted = false,
                            Number = "2025550100"
                        },
                        new
                        {
                            Id = 7,
                            IsPorted = false,
                            Number = "2025550101"
                        },
                        new
                        {
                            Id = 8,
                            IsPorted = false,
                            Number = "2025550102"
                        },
                        new
                        {
                            Id = 9,
                            IsPorted = false,
                            Number = "2025550103"
                        },
                        new
                        {
                            Id = 10,
                            IsPorted = false,
                            Number = "2025550104"
                        },
                        new
                        {
                            Id = 11,
                            IsPorted = false,
                            Number = "3055550100"
                        },
                        new
                        {
                            Id = 12,
                            IsPorted = false,
                            Number = "3055550101"
                        },
                        new
                        {
                            Id = 13,
                            IsPorted = false,
                            Number = "3055550102"
                        },
                        new
                        {
                            Id = 14,
                            IsPorted = false,
                            Number = "3055550103"
                        },
                        new
                        {
                            Id = 15,
                            IsPorted = false,
                            Number = "3055550104"
                        },
                        new
                        {
                            Id = 16,
                            IsPorted = false,
                            Number = "4155550100"
                        },
                        new
                        {
                            Id = 17,
                            IsPorted = false,
                            Number = "4155550101"
                        },
                        new
                        {
                            Id = 18,
                            IsPorted = false,
                            Number = "4155550102"
                        },
                        new
                        {
                            Id = 19,
                            IsPorted = false,
                            Number = "4155550103"
                        },
                        new
                        {
                            Id = 20,
                            IsPorted = false,
                            Number = "4155550104"
                        },
                        new
                        {
                            Id = 21,
                            IsPorted = false,
                            Number = "7025550100"
                        },
                        new
                        {
                            Id = 22,
                            IsPorted = false,
                            Number = "7025550101"
                        },
                        new
                        {
                            Id = 23,
                            IsPorted = false,
                            Number = "7025550102"
                        },
                        new
                        {
                            Id = 24,
                            IsPorted = false,
                            Number = "7025550103"
                        },
                        new
                        {
                            Id = 25,
                            IsPorted = false,
                            Number = "7025550104"
                        });
                });

            modelBuilder.Entity("Entities.PlanBill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<DateTime>("BillingDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.ToTable("PlanBills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 30m,
                            BillId = 1,
                            BillingDate = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Amount = 60m,
                            BillId = 2,
                            BillingDate = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Amount = 30m,
                            BillId = 3,
                            BillingDate = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Amount = 30m,
                            BillId = 3,
                            BillingDate = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            Amount = 60m,
                            BillId = 3,
                            BillingDate = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            Amount = 40m,
                            BillId = 4,
                            BillingDate = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            Amount = 30m,
                            BillId = 5,
                            BillingDate = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            Amount = 40m,
                            BillId = 5,
                            BillingDate = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            Amount = 30m,
                            BillId = 6,
                            BillingDate = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            Amount = 40m,
                            BillId = 6,
                            BillingDate = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            Amount = 40m,
                            BillId = 6,
                            BillingDate = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            Amount = 60m,
                            BillId = 7,
                            BillingDate = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            Amount = 30m,
                            BillId = 8,
                            BillingDate = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14,
                            Amount = 40m,
                            BillId = 9,
                            BillingDate = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15,
                            Amount = 60m,
                            BillId = 9,
                            BillingDate = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 16,
                            Amount = 60m,
                            BillId = 10,
                            BillingDate = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Entities.PlanInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DataLimit")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeviceLimit")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("PlanInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataLimit = 5,
                            Description = "Stay connected with our Basic Plan, perfect for calls, messages, and browsing with a generous 5GB data limit.",
                            DeviceLimit = 1,
                            Name = "Basic Plan",
                            Price = 30m
                        },
                        new
                        {
                            Id = 2,
                            DataLimit = 10,
                            Description = "Upgrade to our Standard Plan for more data and the flexibility to connect two devices. Enjoy browsing, streaming, and sharing with 10GB of data.",
                            DeviceLimit = 2,
                            Name = "Standard Plan",
                            Price = 40m
                        },
                        new
                        {
                            Id = 3,
                            DataLimit = 0,
                            Description = "Get the ultimate experience with our Premium Plan. Stream, game, and connect with multiple devices effortlessly with unlimited data.",
                            DeviceLimit = 5,
                            Name = "Premium Plan",
                            Price = 60m
                        });
                });

            modelBuilder.Entity("Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ca607562-7548-4aec-8da8-073859c65c6d",
                            Email = "emma.johnson@example.com",
                            EmailConfirmed = false,
                            FirstName = "Emma",
                            LastName = "Johnson",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f58392e7-f02b-449b-a002-d4ad385bda60",
                            Email = "liam.williams@example.com",
                            EmailConfirmed = false,
                            FirstName = "Liam",
                            LastName = "Williams",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0cc633fc-df06-46fe-8a68-0ad355ae8b12",
                            Email = "olivia.brown@example.com",
                            EmailConfirmed = false,
                            FirstName = "Olivia",
                            LastName = "Brown",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "aa0c6677-0905-405c-a8e0-16824fbce69c",
                            Email = "noah.jones@example.com",
                            EmailConfirmed = false,
                            FirstName = "Noah",
                            LastName = "Jones",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e5086eab-e420-472a-a3df-007f89640f03",
                            Email = "ava.garcia@example.com",
                            EmailConfirmed = false,
                            FirstName = "Ava",
                            LastName = "Garcia",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 6,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "227a1693-43b3-4557-a943-9cd5d391e5b2",
                            Email = "oliver.miller@example.com",
                            EmailConfirmed = false,
                            FirstName = "Oliver",
                            LastName = "Miller",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 7,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6851279c-80d0-4f03-8467-1c9000170254",
                            Email = "isabella.davis@example.com",
                            EmailConfirmed = false,
                            FirstName = "Isabella",
                            LastName = "Davis",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 8,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6e456b6c-89b4-4729-937d-96b955fd0c9f",
                            Email = "ethan.martinez@example.com",
                            EmailConfirmed = false,
                            FirstName = "Ethan",
                            LastName = "Martinez",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 9,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a654f51a-12fa-4007-bb8b-3ad53a41a2c9",
                            Email = "sophia.rodriguez@example.com",
                            EmailConfirmed = false,
                            FirstName = "Sophia",
                            LastName = "Rodriguez",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 10,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9f3facdd-0ed3-4013-b66f-00196db6f0c2",
                            Email = "jacob.wilson@example.com",
                            EmailConfirmed = false,
                            FirstName = "Jacob",
                            LastName = "Wilson",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        });
                });

            modelBuilder.Entity("Entities.UserPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PlanInfoId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlanInfoId");

                    b.HasIndex("UserId");

                    b.ToTable("UserPlans");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EnrollmentDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PlanInfoId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            EnrollmentDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PlanInfoId = 3,
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            EnrollmentDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PlanInfoId = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 5,
                            EnrollmentDate = new DateTime(2024, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PlanInfoId = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 6,
                            EnrollmentDate = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PlanInfoId = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 7,
                            EnrollmentDate = new DateTime(2024, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PlanInfoId = 2,
                            UserId = 4
                        },
                        new
                        {
                            Id = 8,
                            EnrollmentDate = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PlanInfoId = 1,
                            UserId = 5
                        },
                        new
                        {
                            Id = 9,
                            EnrollmentDate = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PlanInfoId = 2,
                            UserId = 5
                        },
                        new
                        {
                            Id = 10,
                            EnrollmentDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PlanInfoId = 1,
                            UserId = 6
                        },
                        new
                        {
                            Id = 11,
                            EnrollmentDate = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PlanInfoId = 2,
                            UserId = 6
                        },
                        new
                        {
                            Id = 12,
                            EnrollmentDate = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PlanInfoId = 2,
                            UserId = 6
                        },
                        new
                        {
                            Id = 13,
                            EnrollmentDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PlanInfoId = 3,
                            UserId = 7
                        },
                        new
                        {
                            Id = 14,
                            EnrollmentDate = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PlanInfoId = 1,
                            UserId = 8
                        },
                        new
                        {
                            Id = 16,
                            EnrollmentDate = new DateTime(2024, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PlanInfoId = 2,
                            UserId = 9
                        },
                        new
                        {
                            Id = 17,
                            EnrollmentDate = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PlanInfoId = 3,
                            UserId = 9
                        },
                        new
                        {
                            Id = 18,
                            EnrollmentDate = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PlanInfoId = 3,
                            UserId = 10
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Entities.AssignedNumber", b =>
                {
                    b.HasOne("Entities.PhoneNumber", "PhoneNumber")
                        .WithOne("AssignedNumber")
                        .HasForeignKey("Entities.AssignedNumber", "PhoneNumberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.UserPlan", "UserPlan")
                        .WithMany("AssignedNumbers")
                        .HasForeignKey("UserPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PhoneNumber");

                    b.Navigation("UserPlan");
                });

            modelBuilder.Entity("Entities.Device", b =>
                {
                    b.HasOne("Entities.AssignedNumber", "AssignedNumber")
                        .WithOne("Device")
                        .HasForeignKey("Entities.Device", "AssignedNumberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.DeviceInfo", "DeviceInfo")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssignedNumber");

                    b.Navigation("DeviceInfo");
                });

            modelBuilder.Entity("Entities.MonthlyBill", b =>
                {
                    b.HasOne("Entities.User", "User")
                        .WithMany("Bills")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entities.PlanBill", b =>
                {
                    b.HasOne("Entities.MonthlyBill", "MonthlyBill")
                        .WithMany("PlanBills")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MonthlyBill");
                });

            modelBuilder.Entity("Entities.UserPlan", b =>
                {
                    b.HasOne("Entities.PlanInfo", "PlanInfo")
                        .WithMany("UserPlans")
                        .HasForeignKey("PlanInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.User", "User")
                        .WithMany("UserPlans")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlanInfo");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.AssignedNumber", b =>
                {
                    b.Navigation("Device");
                });

            modelBuilder.Entity("Entities.MonthlyBill", b =>
                {
                    b.Navigation("PlanBills");
                });

            modelBuilder.Entity("Entities.PhoneNumber", b =>
                {
                    b.Navigation("AssignedNumber");
                });

            modelBuilder.Entity("Entities.PlanInfo", b =>
                {
                    b.Navigation("UserPlans");
                });

            modelBuilder.Entity("Entities.User", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("UserPlans");
                });

            modelBuilder.Entity("Entities.UserPlan", b =>
                {
                    b.Navigation("AssignedNumbers");
                });
#pragma warning restore 612, 618
        }
    }
}
